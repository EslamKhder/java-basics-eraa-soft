ðŸ”° Level 1: Basic Try-Catch Practice
ðŸ§© Task 1: Divide Two Numbers
Ask user for two integers. Divide them and handle ArithmeticException (e.g., divide by zero).

ðŸ§© Task 2: Convert String to Integer
Ask user to enter a number in a String, convert it to int, and handle NumberFormatException.

ðŸ§© Task 3: Null Pointer
Create a method that calls toUpperCase() on a string. Pass null and handle NullPointerException.

ðŸŸ¡ Level 2: Working with Arrays and Files
ðŸ§© Task 4: Access Array Element
Create an array of 5 elements. Ask user to enter an index and print the value. Handle ArrayIndexOutOfBoundsException.

ðŸ§© Task 5: Read File
Try to read a file from disk and handle FileNotFoundException. (Use FileReader or Scanner)

ðŸ§© Task 6: Multiple Catch Blocks
Write a program that may throw both NullPointerException and ArithmeticException. Use multiple catch blocks.

ðŸŸ  Level 3: Custom Exceptions
ðŸ§© Task 7: Create a Custom Exception
Create a custom exception InvalidAgeException. If user age < 18, throw the exception.

ðŸ§© Task 9: Propagate Exception
Create a method that throws an exception and another method that calls it. Demonstrate how exceptions propagate.

ðŸ§© Task 10: Throws Keyword
Create a method readFile() that throws IOException. Call it from main() using try-catch.

ðŸ§  Bonus / Challenging Tasks
ðŸ§© Task 11: Finally Block Demo
Write a program with a try-catch-finally block and show that the finally block always executes.

ðŸ§© Task 12: Nested Try-Catch
Use nested try-catch blocks where inner block causes ArithmeticException and outer catches it.
